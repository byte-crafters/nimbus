// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// when building for development, Nest searches for files in /dist, so for dev we need to change this value
generator client {
    provider = "prisma-client-js"
    output   = "./generated/prisma-postgres-client-js"
}

datasource postgres_db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id       String  @id @default(uuid())
    email    String  @unique
    username String  @unique
    password String?

    // When creating User we must define its root directory
    rootFolder   Folder @relation(fields: [rootFolderId], references: [id])
    rootFolderId String @unique

    fileAccess FileAccess[]
    File       File[]
}

model Folder {
    id      String   @id @default(uuid()) @map("fd_id")
    name    String?  @map("fd_name")
    path    String[] @map("fd_path")
    removed Boolean  @default(false) @map("fd_removed")

    parentFolder   Folder? @relation("FolderParents", fields: [parentFolderId], references: [id])
    parentFolderId String? @map("fd_parent_folder_id")

    childrenFolders Folder[] @relation("FolderParents")
    childrenFiles   File[]

    owner User?
}

model File {
    id        String  @id @default(uuid()) @map("fl_id")
    name      String  @map("fl_name")
    extension String  @map("fl_extension")
    removed   Boolean @default(false) @map("fl_removed")

    folder     Folder       @relation(fields: [folderId], references: [id])
    folderId   String
    fileAccess FileAccess[]

    owner   User?   @relation(fields: [ownerId], references: [id])
    ownerId String?
}

model FileAccess {
    id         String @id @default(uuid())
    userRights String

    file   File   @relation(fields: [fileId], references: [id])
    fileId String

    user   User   @relation(fields: [userId], references: [id])
    userId String

    // @@map("file_access_list")
}
